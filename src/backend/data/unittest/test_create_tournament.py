from fastapi.testclient import TestClient
import sys
import os

import pytest
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "../..")))
from api import api

@pytest.fixture
def client():
    return TestClient(api)

def test_create_tournament_success(client):
    payload = {
	"name":"Sommer Turnier 2025",
	"date":"2025-06-15",
    "teams": {
		"1":6,
		"2":6
	},
  	"games": {
		"1": {
			"1": [1, 2, 5, "10:00"],
			"2": [2, 1, 5, "10:30"],
			"3": [5, 6, 1, "11:00"],
			"4": [6, 5, 1, "11:30"],
			"5": [1, 3, 6, "12:00"],
			"6": [3, 1, 6, "12:30"],
			"7": [3, 5, 2, "13:00"],
			"8": [5, 3, 2, "13:30"],
			"9": [1, 6, 3, "14:00"],
			"10": [6, 1, 3, "14:30"],
			"11": [2, 6, 4, "15:00"],
			"12": [6, 2, 4, "15:30"],
			"13": [1, 5, 4, "16:00"],
			"14": [5, 1, 4, "16:30"],
			"15": [4, 6, 1, "17:00"],
			"16": [6, 4, 1, "17:30"],
			"17": [2, 5, 1, "18:00"],
			"18": [5, 2, 1, "18:30"],
			"19": [1, 4, 2, "19:00"],
			"20": [4, 1, 2, "19:30"]
		},
		"2": {
			"21": [3, 4, 6, "10:00"],
			"22": [4, 3, 6, "10:30"],
			"23": [11, 12, 7, "11:00"],
			"24": [12, 11, 7, "11:30"],
			"25": [2, 4, 5, "12:00"],
			"26": [4, 2, 5, "12:30"],
			"27": [9, 11, 12, "13:00"],
			"28": [11, 9, 12, "13:30"],
			"29": [4, 5, 2, "14:00"],
			"30": [5, 4, 2, "14:30"],
			"31": [8, 12, 9, "15:00"],
			"32": [12, 8, 9, "15:30"],
			"33": [2, 3, 6, "16:00"],
			"34": [3, 2, 6, "16:30"],
			"35": [10, 12, 11, "17:00"],
			"36": [12, 10, 11, "17:30"],
			"37": [3, 6, 4, "18:00"],
			"38": [6, 3, 4, "18:30"],
			"39": [7, 10, 8, "19:00"],
			"40": [10, 7, 8, "19:30"]
		},
		"3": {
			"41": [7, 8, 10, "10:00"],
			"42": [8, 7, 10, "10:30"],
			"43": [9, 10, 8, "11:00"],
			"44": [10, 9, 8, "11:30"],
			"45": [7, 9, 10, "12:00"],
			"46": [9, 7, 10, "12:30"],
			"47": [8, 10, 7, "13:00"],
			"48": [10, 8, 7, "13:30"],
			"49": [7, 12, 9, "14:00"],
			"50": [12, 7, 9, "14:30"],
			"51": [10, 11, 7, "15:00"],
			"52": [11, 10, 7, "15:30"],
			"53": [7, 11, 12, "16:00"],
			"54": [11, 7, 12, "16:30"],
			"55": [8, 9, 7, "17:00"],
			"56": [9, 8, 7, "17:30"],
			"57": [8, 11, 9, "18:00"],
			"58": [11, 8, 9, "18:30"],
			"59": [9, 12, 11, "19:00"],
			"60": [12, 9, 11, "19:30"]
		}
	}
}
    response = client.post("/api/create", json=payload)
    assert response.status_code == 200
    assert "tournament_id" in response.json()


def test_create_tournament_empty_body(client):
    response = client.post("/api/create", json={})
    assert response.status_code == 422
    assert "detail" in response.json()


def test_create_tournament_invalid_team_type(client):
    payload = {
        "name": "InvalidCup",
        "teams": "A",  # this is supposed to be an object
        "games": {
		"1": {
			"1": [1, 2, 5, "10:00"],
			"2": [2, 1, 5, "10:30"],
			"3": [5, 6, 1, "11:00"],
			"4": [6, 5, 1, "11:30"],
			"5": [1, 3, 6, "12:00"],
			"6": [3, 1, 6, "12:30"],
			"7": [3, 5, 2, "13:00"],
			"8": [5, 3, 2, "13:30"],
			"9": [1, 6, 3, "14:00"],
			"10": [6, 1, 3, "14:30"],
			"11": [2, 6, 4, "15:00"],
			"12": [6, 2, 4, "15:30"],
			"13": [1, 5, 4, "16:00"],
			"14": [5, 1, 4, "16:30"],
			"15": [4, 6, 1, "17:00"],
			"16": [6, 4, 1, "17:30"],
			"17": [2, 5, 1, "18:00"],
			"18": [5, 2, 1, "18:30"],
			"19": [1, 4, 2, "19:00"],
			"20": [4, 1, 2, "19:30"]
		},
		"2": {
			"21": [3, 4, 6, "10:00"],
			"22": [4, 3, 6, "10:30"],
			"23": [11, 12, 7, "11:00"],
			"24": [12, 11, 7, "11:30"],
			"25": [2, 4, 5, "12:00"],
			"26": [4, 2, 5, "12:30"],
			"27": [9, 11, 12, "13:00"],
			"28": [11, 9, 12, "13:30"],
			"29": [4, 5, 2, "14:00"],
			"30": [5, 4, 2, "14:30"],
			"31": [8, 12, 9, "15:00"],
			"32": [12, 8, 9, "15:30"],
			"33": [2, 3, 6, "16:00"],
			"34": [3, 2, 6, "16:30"],
			"35": [10, 12, 11, "17:00"],
			"36": [12, 10, 11, "17:30"],
			"37": [3, 6, 4, "18:00"],
			"38": [6, 3, 4, "18:30"],
			"39": [7, 10, 8, "19:00"],
			"40": [10, 7, 8, "19:30"]
		},
		"3": {
			"41": [7, 8, 10, "10:00"],
			"42": [8, 7, 10, "10:30"],
			"43": [9, 10, 8, "11:00"],
			"44": [10, 9, 8, "11:30"],
			"45": [7, 9, 10, "12:00"],
			"46": [9, 7, 10, "12:30"],
			"47": [8, 10, 7, "13:00"],
			"48": [10, 8, 7, "13:30"],
			"49": [7, 12, 9, "14:00"],
			"50": [12, 7, 9, "14:30"],
			"51": [10, 11, 7, "15:00"],
			"52": [11, 10, 7, "15:30"],
			"53": [7, 11, 12, "16:00"],
			"54": [11, 7, 12, "16:30"],
			"55": [8, 9, 7, "17:00"],
			"56": [9, 8, 7, "17:30"],
			"57": [8, 11, 9, "18:00"],
			"58": [11, 8, 9, "18:30"],
			"59": [9, 12, 11, "19:00"],
			"60": [12, 9, 11, "19:30"]
		},
        "date": "2025-06-01",
        }
    }
    response = client.post("/api/create", json=payload)
    assert response.status_code == 422
    assert any("valid dictionary" in err["msg"].lower() for err in response.json()["detail"])



def test_create_tournament_invalid_games_type(client):
    payload = {
        "name": "InvalidCup",
        "teams": {
            "1":6,
            "2":6
        },
        "games": [1,2,3], # this should be an object
        "date": "2025-06-01",
        }
    response = client.post("/api/create", json=payload)
    assert response.status_code == 422
    assert any("valid dictionary" in err["msg"].lower() for err in response.json()["detail"])


def test_create_tournament_missing_name(client):

    payload = {
        "name": "",
        "teams": {
		"1":6,
		"2":6
	},
        "games": {
		"1": {
			"1": [1, 2, 5, "10:00"],
			"2": [2, 1, 5, "10:30"],
			"3": [5, 6, 1, "11:00"],
			"4": [6, 5, 1, "11:30"],
			"5": [1, 3, 6, "12:00"],
			"6": [3, 1, 6, "12:30"],
			"7": [3, 5, 2, "13:00"],
			"8": [5, 3, 2, "13:30"],
			"9": [1, 6, 3, "14:00"],
			"10": [6, 1, 3, "14:30"],
			"11": [2, 6, 4, "15:00"],
			"12": [6, 2, 4, "15:30"],
			"13": [1, 5, 4, "16:00"],
			"14": [5, 1, 4, "16:30"],
			"15": [4, 6, 1, "17:00"],
			"16": [6, 4, 1, "17:30"],
			"17": [2, 5, 1, "18:00"],
			"18": [5, 2, 1, "18:30"],
			"19": [1, 4, 2, "19:00"],
			"20": [4, 1, 2, "19:30"]
		},
		"2": {
			"21": [3, 4, 6, "10:00"],
			"22": [4, 3, 6, "10:30"],
			"23": [11, 12, 7, "11:00"],
			"24": [12, 11, 7, "11:30"],
			"25": [2, 4, 5, "12:00"],
			"26": [4, 2, 5, "12:30"],
			"27": [9, 11, 12, "13:00"],
			"28": [11, 9, 12, "13:30"],
			"29": [4, 5, 2, "14:00"],
			"30": [5, 4, 2, "14:30"],
			"31": [8, 12, 9, "15:00"],
			"32": [12, 8, 9, "15:30"],
			"33": [2, 3, 6, "16:00"],
			"34": [3, 2, 6, "16:30"],
			"35": [10, 12, 11, "17:00"],
			"36": [12, 10, 11, "17:30"],
			"37": [3, 6, 4, "18:00"],
			"38": [6, 3, 4, "18:30"],
			"39": [7, 10, 8, "19:00"],
			"40": [10, 7, 8, "19:30"]
		},
		"3": {
			"41": [7, 8, 10, "10:00"],
			"42": [8, 7, 10, "10:30"],
			"43": [9, 10, 8, "11:00"],
			"44": [10, 9, 8, "11:30"],
			"45": [7, 9, 10, "12:00"],
			"46": [9, 7, 10, "12:30"],
			"47": [8, 10, 7, "13:00"],
			"48": [10, 8, 7, "13:30"],
			"49": [7, 12, 9, "14:00"],
			"50": [12, 7, 9, "14:30"],
			"51": [10, 11, 7, "15:00"],
			"52": [11, 10, 7, "15:30"],
			"53": [7, 11, 12, "16:00"],
			"54": [11, 7, 12, "16:30"],
			"55": [8, 9, 7, "17:00"],
			"56": [9, 8, 7, "17:30"],
			"57": [8, 11, 9, "18:00"],
			"58": [11, 8, 9, "18:30"],
			"59": [9, 12, 11, "19:00"],
			"60": [12, 9, 11, "19:30"]
		},
        "date": "2025-06-01"
    }
    }
    response = client.post("/api/create", json=payload)
    assert response.status_code == 400
    assert response.json() == {"detail": "Tournament name must not be empty."}
    

def test_create_tournament_invalid_date(client):
    payload = {
        "name": "BadDate",
        "date": "not-a-date",
        "teams": {
		"1":6,
		"2":6
        },
        "games": {
		"1": {
			"1": [1, 2, 5, "10:00"],
			"2": [2, 1, 5, "10:30"],
			"3": [5, 6, 1, "11:00"],
			"4": [6, 5, 1, "11:30"],
			"5": [1, 3, 6, "12:00"],
			"6": [3, 1, 6, "12:30"],
			"7": [3, 5, 2, "13:00"],
			"8": [5, 3, 2, "13:30"],
			"9": [1, 6, 3, "14:00"],
			"10": [6, 1, 3, "14:30"],
			"11": [2, 6, 4, "15:00"],
			"12": [6, 2, 4, "15:30"],
			"13": [1, 5, 4, "16:00"],
			"14": [5, 1, 4, "16:30"],
			"15": [4, 6, 1, "17:00"],
			"16": [6, 4, 1, "17:30"],
			"17": [2, 5, 1, "18:00"],
			"18": [5, 2, 1, "18:30"],
			"19": [1, 4, 2, "19:00"],
			"20": [4, 1, 2, "19:30"]
		},
		"2": {
			"21": [3, 4, 6, "10:00"],
			"22": [4, 3, 6, "10:30"],
			"23": [11, 12, 7, "11:00"],
			"24": [12, 11, 7, "11:30"],
			"25": [2, 4, 5, "12:00"],
			"26": [4, 2, 5, "12:30"],
			"27": [9, 11, 12, "13:00"],
			"28": [11, 9, 12, "13:30"],
			"29": [4, 5, 2, "14:00"],
			"30": [5, 4, 2, "14:30"],
			"31": [8, 12, 9, "15:00"],
			"32": [12, 8, 9, "15:30"],
			"33": [2, 3, 6, "16:00"],
			"34": [3, 2, 6, "16:30"],
			"35": [10, 12, 11, "17:00"],
			"36": [12, 10, 11, "17:30"],
			"37": [3, 6, 4, "18:00"],
			"38": [6, 3, 4, "18:30"],
			"39": [7, 10, 8, "19:00"],
			"40": [10, 7, 8, "19:30"]
		},
		"3": {
			"41": [7, 8, 10, "10:00"],
			"42": [8, 7, 10, "10:30"],
			"43": [9, 10, 8, "11:00"],
			"44": [10, 9, 8, "11:30"],
			"45": [7, 9, 10, "12:00"],
			"46": [9, 7, 10, "12:30"],
			"47": [8, 10, 7, "13:00"],
			"48": [10, 8, 7, "13:30"],
			"49": [7, 12, 9, "14:00"],
			"50": [12, 7, 9, "14:30"],
			"51": [10, 11, 7, "15:00"],
			"52": [11, 10, 7, "15:30"],
			"53": [7, 11, 12, "16:00"],
			"54": [11, 7, 12, "16:30"],
			"55": [8, 9, 7, "17:00"],
			"56": [9, 8, 7, "17:30"],
			"57": [8, 11, 9, "18:00"],
			"58": [11, 8, 9, "18:30"],
			"59": [9, 12, 11, "19:00"],
			"60": [12, 9, 11, "19:30"]
		} 
    }
    }
    response = client.post("/api/create", json=payload)
    assert response.status_code == 400
    assert response.json()["detail"] == "Date must be in the format YYYY-MM-DD."


def test_create_tournament_too_many_groups(client):
    payload = {
    "name":"Sommer Turnier 2025",
	"date":"2025-06-15",
    "teams": {
		"1":6,
		"2":6,
        "3":6
	},
  	"games": {
		"1": {
			"1": [1, 2, 5, "10:00"],
			"2": [2, 1, 5, "10:30"],
			"3": [5, 6, 1, "11:00"],
			"4": [6, 5, 1, "11:30"],
			"5": [1, 3, 6, "12:00"],
			"6": [3, 1, 6, "12:30"],
			"7": [3, 5, 2, "13:00"],
			"8": [5, 3, 2, "13:30"],
			"9": [1, 6, 3, "14:00"],
			"10": [6, 1, 3, "14:30"],
			"11": [2, 6, 4, "15:00"],
			"12": [6, 2, 4, "15:30"],
			"13": [1, 5, 4, "16:00"],
			"14": [5, 1, 4, "16:30"],
			"15": [4, 6, 1, "17:00"],
			"16": [6, 4, 1, "17:30"],
			"17": [2, 5, 1, "18:00"],
			"18": [5, 2, 1, "18:30"],
			"19": [1, 4, 2, "19:00"],
			"20": [4, 1, 2, "19:30"]
		},
		"2": {
			"21": [3, 4, 6, "10:00"],
			"22": [4, 3, 6, "10:30"],
			"23": [11, 12, 7, "11:00"],
			"24": [12, 11, 7, "11:30"],
			"25": [2, 4, 5, "12:00"],
			"26": [4, 2, 5, "12:30"],
			"27": [9, 11, 12, "13:00"],
			"28": [11, 9, 12, "13:30"],
			"29": [4, 5, 2, "14:00"],
			"30": [5, 4, 2, "14:30"],
			"31": [8, 12, 9, "15:00"],
			"32": [12, 8, 9, "15:30"],
			"33": [2, 3, 6, "16:00"],
			"34": [3, 2, 6, "16:30"],
			"35": [10, 12, 11, "17:00"],
			"36": [12, 10, 11, "17:30"],
			"37": [3, 6, 4, "18:00"],
			"38": [6, 3, 4, "18:30"],
			"39": [7, 10, 8, "19:00"],
			"40": [10, 7, 8, "19:30"]
		},
		"3": {
			"41": [7, 8, 10, "10:00"],
			"42": [8, 7, 10, "10:30"],
			"43": [9, 10, 8, "11:00"],
			"44": [10, 9, 8, "11:30"],
			"45": [7, 9, 10, "12:00"],
			"46": [9, 7, 10, "12:30"],
			"47": [8, 10, 7, "13:00"],
			"48": [10, 8, 7, "13:30"],
			"49": [7, 12, 9, "14:00"],
			"50": [12, 7, 9, "14:30"],
			"51": [10, 11, 7, "15:00"],
			"52": [11, 10, 7, "15:30"],
			"53": [7, 11, 12, "16:00"],
			"54": [11, 7, 12, "16:30"],
			"55": [8, 9, 7, "17:00"],
			"56": [9, 8, 7, "17:30"],
			"57": [8, 11, 9, "18:00"],
			"58": [11, 8, 9, "18:30"],
			"59": [9, 12, 11, "19:00"],
			"60": [12, 9, 11, "19:30"]
		}
	}
}
    response = client.post("/api/create", json=payload)
    assert response.status_code == 400
    assert response.json()["detail"] == "Teams must have at least 1 and at most 2 groups."



def test_create_tournament_wrong_time_format(client):
    payload = {
    "name":"Sommer Turnier 2025",
	"date":"2025-06-15",
    "teams": {
		"1":6,
		"2":6
	},
  	"games": {
		"1": {
			"1": [1, 2, 5, "1200"],
			"2": [2, 1, 5, "1030"],
			"3": [5, 6, 1, "1100"],
			"4": [6, 5, 1, "1130"],
			"5": [1, 3, 6, "1200"],
			"6": [3, 1, 6, "1230"],
			"7": [3, 5, 2, "1300"],
			"8": [5, 3, 2, "1330"],
			"9": [1, 6, 3, "1400"],
			"10": [6, 1, 3, "1300"],
			"11": [2, 6, 4, "100"],
			"12": [6, 2, 4, "1530"],
			"13": [1, 5, 4, "1600"],
			"14": [5, 1, 4, "1630"],
			"15": [4, 6, 1, "1700"],
			"16": [6, 4, 1, "1730"],
			"17": [2, 5, 1, "1800"],
			"18": [5, 2, 1, "1830"],
			"19": [1, 4, 2, "1900"],
			"20": [4, 1, 2, "1930"]
		},
		"2": {
			"21": [3, 4, 6, "1000"],
			"22": [4, 3, 6, "1030"],
			"23": [11, 12, 7, "1000"],
			"24": [12, 11, 7, "1130"],
			"25": [2, 4, 5, "1200"],
			"26": [4, 2, 5, "1230"],
			"27": [9, 11, 12, "1300"],
			"28": [11, 9, 12, "1330"],
			"29": [4, 5, 2, "1400"],
			"30": [5, 4, 2, "1430"],
			"31": [8, 12, 9, "1500"],
			"32": [12, 8, 9, "1530"],
			"33": [2, 3, 6, "1600"],
			"34": [3, 2, 6, "1630"],
			"35": [10, 12, 11, "1700"],
			"36": [12, 10, 11, "1730"],
			"37": [3, 6, 4, "1800"],
			"38": [6, 3, 4, "1830"],
			"39": [7, 10, 8, "1900"],
			"40": [10, 7, 8, "1930"]
		},
		"3": {
			"41": [7, 8, 10, "1000"],
			"42": [8, 7, 10, "1030"],
			"43": [9, 10, 8, "1100"],
			"44": [10, 9, 8, "1130"],
			"45": [7, 9, 10, "1200"],
			"46": [9, 7, 10, "1230"],
			"47": [8, 10, 7, "1300"],
			"48": [10, 8, 7, "1330"],
			"49": [7, 12, 9, "1400"],
			"50": [12, 7, 9, "1430"],
			"51": [10, 11, 7, "1500"],
			"52": [11, 10, 7, "1530"],
			"53": [7, 11, 12, "1600"],
			"54": [11, 7, 12, "1630"],
			"55": [8, 9, 7, "1700"],
			"56": [9, 8, 7, "1730"],
			"57": [8, 11, 9, "1800"],
			"58": [11, 8, 9, "1830"],
			"59": [9, 12, 11, "1900"],
			"60": [12, 9, 11, "1930"]
		}
	}
}
    response = client.post("/api/create", json=payload)
    assert response.status_code == 400
    assert response.json()["detail"] == "Game '1' in field '1' has invalid time format. Use 'HH:MM'."


